#load(paste0(inpath, "pls_model_list_all_no_rfe.RData"))
########################################################################################
########################################################################################
for (i in seq(mod)){
print(names(mod[i]))
plot(mod[[i]])
print(mod[[i]])
}
r2_lst <- lapply(mod, function(i){
R2 <- max(i$results$Rsquared)
})
r2 <- as.data.frame(do.call(rbind, r2_lst))
colnames(r2) <- "rsquared"
View(r2)
opt_vars <- c()
for (i in seq(mod)){
print(length(mod[[i]]$optVariables))
if (max(mod[[i]]$variables$Variables) != length(mod[[i]]$optVariables)){
opt_vars <- c(opt_vars, mod[[i]]$optVariables)
}
}
opt_freq <- as.data.frame(table(opt_vars))
opt_freq <- opt_freq[order(opt_freq$Freq, decreasing = T), ]
View(opt_freq)
# Author: Alice Ziegler
# Date: 2017-10-10 17:12:53
rm(list=ls())
########################################################################################
###Presettings
########################################################################################
#Packages:
library(caret)
library(raster)
#library(plsdepot)
#Sources:
inpath <- "F:/Projekte/Kili/data/"
outpath <- "F:/Projekte/Kili/out/"
########################################################################################
###Settings
########################################################################################
#load(paste0(inpath, "pls_model_list_all.RData"))
load(paste0(inpath, "pls_model_list_all_forest_only.RData"))
for (i in seq(mod)){
print(names(mod[i]))
plot(mod[[i]])
print(mod[[i]])
}
r2_lst <- lapply(mod, function(i){
R2 <- max(i$results$Rsquared)
})
r2 <- as.data.frame(do.call(rbind, r2_lst))
colnames(r2) <- "rsquared"
View(r2)
opt_vars <- c()
for (i in seq(mod)){
print(length(mod[[i]]$optVariables))
if (max(mod[[i]]$variables$Variables) != length(mod[[i]]$optVariables)){
opt_vars <- c(opt_vars, mod[[i]]$optVariables)
}
}
opt_freq <- as.data.frame(table(opt_vars))
opt_freq <- opt_freq[order(opt_freq$Freq, decreasing = T), ]
for (i in seq(mod){
mod[[i]]$optVariables
})
opt_vars <- c()
for (i in seq(mod)){
print(length(mod[[i]]$optVariables))
if (max(mod[[i]]$variables$Variables) != length(mod[[i]]$optVariables)){
opt_vars <- c(opt_vars, mod[[i]]$optVariables)
}
}
opt_freq <- as.data.frame(table(opt_vars))
opt_freq <- opt_freq[order(opt_freq$Freq, decreasing = T), ]
for (i in seq(mod){
mod[[i]]$optVariables
})
View(opt_freq)
View(r2)
?ffs
# Author: Alice Ziegler
# Date: 2017-10-10 17:12:53
rm(list=ls())
########################################################################################
###Presettings
########################################################################################
#Packages:
library(caret)
library(raster)
#library(plsdepot)
#Sources:
inpath <- "F:/Projekte/Kili/data/"
outpath <- "F:/Projekte/Kili/out/"
########################################################################################
###Settings
########################################################################################
#load(paste0(inpath, "pls_model_list_all.RData"))
load(paste0(inpath, "pls_model_list_all_forest_only.RData"))
#load(paste0(inpath, "pls_model_list_all_no_rfe.RData"))
for (i in seq(mod)){
print(names(mod[i]))
plot(mod[[i]])
print(mod[[i]])
}
opt_vars <- c()
i <- 1
print(length(mod[[i]]$optVariables))
mod[[i]]$optVariables
if (max(mod[[i]]$variables$Variables) != length(mod[[i]]$optVariables)){
opt_vars <- c(opt_vars, mod[[i]]$optVariables)
}
varImp(mod)
varImp(mod[[1]])
names(mod[[1]])
names(mod)
names(mod)[[1]]
for (i in seq(mod)){
print(names(mod)[[i]])
varImp(mod[[i]])
}
for (i in seq(mod)){
print(names(mod)[[i]])
print(varImp(mod[[i]]))
}
var_imp <- as.data.frame()
as.data.frame(varImp(mod[[1]]))
df <- as.data.frame(varImp(mod[[1]]))
View(df)
colnames(df) <- names(mod)[[i]]
colnames(df) <- names(mod)[[1]]
View(df)
var_imp <- c()
for (i in seq(mod)){
print(names(mod)[[i]])
print(varImp(mod[[i]]))
df <- as.data.frame(varImp(mod[[i]]))
colnames(df) <- names(mod)[[i]]
cbind(var_imp, df)
}
?merge
df$plotID <- colnames(df)
View(df)
df$plotID <- rownames(df)
View(df)
for (i in seq(mod)){
print(names(mod)[[i]])
print(varImp(mod[[i]]))
df <- as.data.frame(varImp(mod[[i]]))
df$plotID <- rownames(df)
colnames(df) <- names(mod)[[i]]
var_imp <- merge(var_imp, df)
}
merge(var_imp, df)
a  <- merge(var_imp, df)
View(a)
a  <- merge(var_imp, df, by = "plotID")
View(df)
colnames(df) <- names(mod)[[i]]
a  <- merge(var_imp, df, by = "plotID")
var_imp <- data.frame(df$plotID)
View(df)
View(var_imp)
? data.frame
var_imp <- as.data.frame(df$plotID)
var_imp <- as.data.frame(df$plotID,)
var_imp <- df$plotID
df$plotID
i <- 1
df <- as.data.frame(varImp(mod[[i]]))
df$plotID <- rownames(df)
colnames(df) <- names(mod)[[i]]
var_imp <- merge(var_imp, df)
var_imp <- df$plotID
df$plotID
df <- as.data.frame(varImp(mod[[i]]))
df$plotID <- rownames(df)
View(df)
View(df)
colnames(df) <- names(mod)[[i]]
var_imp <- df$plotID
var_imp <- df[,2]
var_imp <- as.data.frame(df[,2])
for (i in seq(mod)){
print(names(mod)[[i]])
print(varImp(mod[[i]]))
df <- as.data.frame(varImp(mod[[i]]))
df$plotID <- rownames(df)
colnames(df) <- names(mod)[[i]]
var_imp <- merge(var_imp, df)
#a  <- merge(var_imp, df, by = "plotID")
}
var_imp <- as.data.frame(df[,2])
df <- as.data.frame(varImp(mod[[i]]))
df$plotID <- rownames(df)
colnames(df) <- names(mod)[[i]]
View(df)
View(var_imp)
View(df)
var_imp <- merge(var_imp, df)
load(paste0(inpath, "dat_ldr_mrg.RData"))
var_imp <- as.data.frame(mrg_tbl$plotID)
for (i in seq(mod)){
print(names(mod)[[i]])
print(varImp(mod[[i]]))
df <- as.data.frame(varImp(mod[[i]]))
df$plotID <- rownames(df)
colnames(df) <- names(mod)[[i]]
var_imp <- merge(var_imp, df)
#a  <- merge(var_imp, df, by = "plotID")
}
?merge
var_imp <- as.data.frame(mrg_tbl$plotID)
for (i in seq(mod)){
print(names(mod)[[i]])
print(varImp(mod[[i]]))
df <- as.data.frame(varImp(mod[[i]]))
df$plotID <- rownames(df)
colnames(df) <- names(mod)[[i]]
var_imp <- merge(var_imp, df, all = T)
#a  <- merge(var_imp, df, by = "plotID")
}
View(var_imp)
var_imp <- as.data.frame(mrg_tbl$plotID)
View(var_imp)
var_imp <- as.data.frame(plotID = mrg_tbl$plotID)
View(var_imp)
var_imp <- as.data.frame(mrg_tbl$plotID)
colnames(var_imp) <- "plotID"
for (i in seq(mod)){
print(names(mod)[[i]])
print(varImp(mod[[i]]))
df <- as.data.frame(varImp(mod[[i]]))
df$plotID <- rownames(df)
colnames(df) <- names(mod)[[i]]
var_imp <- merge(var_imp, df, all = T)
#a  <- merge(var_imp, df, by = "plotID")
}
View(var_imp)
df$plotID <- rownames(df)
colnames(df) <- names(mod)[[i]]
View(df)
nm_ldr <- colnames(mrg_tbl)[seq(grep("BE_ELEV_ASPECT", names(mrg_tbl)),
grep("gap_frac", names(mrg_tbl)))]
pred_tbl <- cbind(mrg_tbl[1:7],
mrg_tbl[14:40],
mrg_tbl[41],
mrg_tbl[43:68],
mrg_tbl[71:74],
mrg_tbl[79:81],
mrg_tbl[86:90],
mrg_tbl[101:104],
mrg_tbl[114:129],
mrg_tbl[134])
nm_ldr <- colnames(mrg_tbl)[seq(grep("BE_ELEV_ASPECT", names(mrg_tbl)),
grep("gap_frac", names(mrg_tbl)))]
nm_ldr
pred_tbl <- cbind(mrg_tbl[1:7],
mrg_tbl[14:40],
mrg_tbl[41],
mrg_tbl[43:68],
mrg_tbl[71:74],
mrg_tbl[79:81],
mrg_tbl[86:90],
mrg_tbl[101:104],
mrg_tbl[114:129],
mrg_tbl[134])
nm_ldr <- colnames(pred_tbl)[seq(grep("BE_ELEV_ASPECT", names(mrg_tbl)),
grep("gap_frac", names(mrg_tbl)))]
nm_ldr
var_imp <-  as.data.frame(c("BE_H_MEDIAN", "BE_H_P10", "BE_H_P100", "BE_H_P20", "BE_H_P30", "BE_H_P40", "BE_H_P50", "BE_H_P60", "BE_H_P70",
"BE_H_P80", "BE_H_P90", "BE_H_SD", "BE_H_SKEW", "BE_H_VAR", "BE_PR_CAN", "BE_PR_REG", "BE_PR_UND", "BE_RD_CAN",
"BE_RD_GND", "BE_RD_REG", "BE_RD_UND", "chm_height_max", "chm_height_mean", "chm_height_min", "chm_height_sd",
"dtm_aspect_mean", "dtm_aspect_reg", "dtm_aspect_unweighted_mean", "dtm_slope_max", "dtm_slope_mean",
"dtm_slope_min", "dtm_slope_reg", "dtm_slope_sd", "pulse_returns_max", "pulse_returns_mean", "pulse_returns_min",
"pulse_returns_sd", "vegetation_coverage_01m", "vegetation_coverage_02m", "vegetation_coverage_05m",
"vegetation_coverage_10m", "max_hght", "sd", "mdn_rtrn", "max_rtrn", "sd_rtrn_1", "sd_nmbr_rtrn", "qntl_0",
"qntl_25", "qntl_50", "qntl_75", "qntl_100", "qntl_rng", "gap_frac"))
var_imp <-  as.data.frame(c("BE_H_MEDIAN", "BE_H_P10", "BE_H_P100", "BE_H_P20", "BE_H_P30", "BE_H_P40", "BE_H_P50", "BE_H_P60", "BE_H_P70",
"BE_H_P80", "BE_H_P90", "BE_H_SD", "BE_H_SKEW", "BE_H_VAR", "BE_PR_CAN", "BE_PR_REG", "BE_PR_UND", "BE_RD_CAN",
"BE_RD_GND", "BE_RD_REG", "BE_RD_UND", "chm_height_max", "chm_height_mean", "chm_height_min", "chm_height_sd",
"dtm_aspect_mean", "dtm_aspect_reg", "dtm_aspect_unweighted_mean", "dtm_slope_max", "dtm_slope_mean",
"dtm_slope_min", "dtm_slope_reg", "dtm_slope_sd", "pulse_returns_max", "pulse_returns_mean", "pulse_returns_min",
"pulse_returns_sd", "vegetation_coverage_01m", "vegetation_coverage_02m", "vegetation_coverage_05m",
"vegetation_coverage_10m", "max_hght", "sd", "mdn_rtrn", "max_rtrn", "sd_rtrn_1", "sd_nmbr_rtrn", "qntl_0",
"qntl_25", "qntl_50", "qntl_75", "qntl_100", "qntl_rng", "gap_frac"))
var_imp <-  as.data.frame("BE_H_MEDIAN", "BE_H_P10", "BE_H_P100", "BE_H_P20", "BE_H_P30", "BE_H_P40", "BE_H_P50", "BE_H_P60", "BE_H_P70",
"BE_H_P80", "BE_H_P90", "BE_H_SD", "BE_H_SKEW", "BE_H_VAR", "BE_PR_CAN", "BE_PR_REG", "BE_PR_UND", "BE_RD_CAN",
"BE_RD_GND", "BE_RD_REG", "BE_RD_UND", "chm_height_max", "chm_height_mean", "chm_height_min", "chm_height_sd",
"dtm_aspect_mean", "dtm_aspect_reg", "dtm_aspect_unweighted_mean", "dtm_slope_max", "dtm_slope_mean",
"dtm_slope_min", "dtm_slope_reg", "dtm_slope_sd", "pulse_returns_max", "pulse_returns_mean", "pulse_returns_min",
"pulse_returns_sd", "vegetation_coverage_01m", "vegetation_coverage_02m", "vegetation_coverage_05m",
"vegetation_coverage_10m", "max_hght", "sd", "mdn_rtrn", "max_rtrn", "sd_rtrn_1", "sd_nmbr_rtrn", "qntl_0",
"qntl_25", "qntl_50", "qntl_75", "qntl_100", "qntl_rng", "gap_frac")
mrg_tbl$plotID
var_imp <-  c("BE_H_MEDIAN", "BE_H_P10", "BE_H_P100", "BE_H_P20", "BE_H_P30", "BE_H_P40", "BE_H_P50", "BE_H_P60", "BE_H_P70",
"BE_H_P80", "BE_H_P90", "BE_H_SD", "BE_H_SKEW", "BE_H_VAR", "BE_PR_CAN", "BE_PR_REG", "BE_PR_UND", "BE_RD_CAN",
"BE_RD_GND", "BE_RD_REG", "BE_RD_UND", "chm_height_max", "chm_height_mean", "chm_height_min", "chm_height_sd",
"dtm_aspect_mean", "dtm_aspect_reg", "dtm_aspect_unweighted_mean", "dtm_slope_max", "dtm_slope_mean",
"dtm_slope_min", "dtm_slope_reg", "dtm_slope_sd", "pulse_returns_max", "pulse_returns_mean", "pulse_returns_min",
"pulse_returns_sd", "vegetation_coverage_01m", "vegetation_coverage_02m", "vegetation_coverage_05m",
"vegetation_coverage_10m", "max_hght", "sd", "mdn_rtrn", "max_rtrn", "sd_rtrn_1", "sd_nmbr_rtrn", "qntl_0",
"qntl_25", "qntl_50", "qntl_75", "qntl_100", "qntl_rng", "gap_frac")
colnames(var_imp) <- "pred"
var_imp <-  data.frame(c("BE_H_MEDIAN", "BE_H_P10", "BE_H_P100", "BE_H_P20", "BE_H_P30", "BE_H_P40", "BE_H_P50", "BE_H_P60", "BE_H_P70",
"BE_H_P80", "BE_H_P90", "BE_H_SD", "BE_H_SKEW", "BE_H_VAR", "BE_PR_CAN", "BE_PR_REG", "BE_PR_UND", "BE_RD_CAN",
"BE_RD_GND", "BE_RD_REG", "BE_RD_UND", "chm_height_max", "chm_height_mean", "chm_height_min", "chm_height_sd",
"dtm_aspect_mean", "dtm_aspect_reg", "dtm_aspect_unweighted_mean", "dtm_slope_max", "dtm_slope_mean",
"dtm_slope_min", "dtm_slope_reg", "dtm_slope_sd", "pulse_returns_max", "pulse_returns_mean", "pulse_returns_min",
"pulse_returns_sd", "vegetation_coverage_01m", "vegetation_coverage_02m", "vegetation_coverage_05m",
"vegetation_coverage_10m", "max_hght", "sd", "mdn_rtrn", "max_rtrn", "sd_rtrn_1", "sd_nmbr_rtrn", "qntl_0",
"qntl_25", "qntl_50", "qntl_75", "qntl_100", "qntl_rng", "gap_frac"), dim = c(1,0))
View(var_imp)
as.data.frame
?as.data.frame
var_imp <- as.data.frame(var_imp)
View(var_imp)
var_imp <-  c("BE_H_MEDIAN", "BE_H_P10", "BE_H_P100", "BE_H_P20", "BE_H_P30", "BE_H_P40", "BE_H_P50", "BE_H_P60", "BE_H_P70",
"BE_H_P80", "BE_H_P90", "BE_H_SD", "BE_H_SKEW", "BE_H_VAR", "BE_PR_CAN", "BE_PR_REG", "BE_PR_UND", "BE_RD_CAN",
"BE_RD_GND", "BE_RD_REG", "BE_RD_UND", "chm_height_max", "chm_height_mean", "chm_height_min", "chm_height_sd",
"dtm_aspect_mean", "dtm_aspect_reg", "dtm_aspect_unweighted_mean", "dtm_slope_max", "dtm_slope_mean",
"dtm_slope_min", "dtm_slope_reg", "dtm_slope_sd", "pulse_returns_max", "pulse_returns_mean", "pulse_returns_min",
"pulse_returns_sd", "vegetation_coverage_01m", "vegetation_coverage_02m", "vegetation_coverage_05m",
"vegetation_coverage_10m", "max_hght", "sd", "mdn_rtrn", "max_rtrn", "sd_rtrn_1", "sd_nmbr_rtrn", "qntl_0",
"qntl_25", "qntl_50", "qntl_75", "qntl_100", "qntl_rng", "gap_frac")
var_imp <- as.data.frame(var_imp)
View(var_imp)
colnames(var_imp) <- "pred"
View(var_imp)
for (i in seq(mod)){
print(names(mod)[[i]])
print(varImp(mod[[i]]))
df <- as.data.frame(varImp(mod[[i]]))
df$pred <- rownames(df)
colnames(df) <- names(mod)[[i]]
var_imp <- merge(var_imp, df, all = T)
#a  <- merge(var_imp, df, by = "plotID")
}
View(var_imp)
var_imp <- as.data.frame(mrg_tbl$plotID)
var_imp <-  c("BE_H_MEDIAN", "BE_H_P10", "BE_H_P100", "BE_H_P20", "BE_H_P30", "BE_H_P40", "BE_H_P50", "BE_H_P60", "BE_H_P70",
"BE_H_P80", "BE_H_P90", "BE_H_SD", "BE_H_SKEW", "BE_H_VAR", "BE_PR_CAN", "BE_PR_REG", "BE_PR_UND", "BE_RD_CAN",
"BE_RD_GND", "BE_RD_REG", "BE_RD_UND", "chm_height_max", "chm_height_mean", "chm_height_min", "chm_height_sd",
"dtm_aspect_mean", "dtm_aspect_reg", "dtm_aspect_unweighted_mean", "dtm_slope_max", "dtm_slope_mean",
"dtm_slope_min", "dtm_slope_reg", "dtm_slope_sd", "pulse_returns_max", "pulse_returns_mean", "pulse_returns_min",
"pulse_returns_sd", "vegetation_coverage_01m", "vegetation_coverage_02m", "vegetation_coverage_05m",
"vegetation_coverage_10m", "max_hght", "sd", "mdn_rtrn", "max_rtrn", "sd_rtrn_1", "sd_nmbr_rtrn", "qntl_0",
"qntl_25", "qntl_50", "qntl_75", "qntl_100", "qntl_rng", "gap_frac")
var_imp <- as.data.frame(var_imp)
colnames(var_imp) <- "pred"
i <- 1
print(names(mod)[[i]])
print(varImp(mod[[i]]))
df <- as.data.frame(varImp(mod[[i]]))
df$pred <- rownames(df)
colnames(df) <- names(mod)[[i]]
View(df)
print(names(mod)[[i]])
print(varImp(mod[[i]]))
df <- as.data.frame(varImp(mod[[i]]))
df$pred <- rownames(df)
View(df)
var_imp <- as.data.frame(mrg_tbl$plotID)
var_imp <-  c("BE_H_MEDIAN", "BE_H_P10", "BE_H_P100", "BE_H_P20", "BE_H_P30", "BE_H_P40", "BE_H_P50", "BE_H_P60", "BE_H_P70",
"BE_H_P80", "BE_H_P90", "BE_H_SD", "BE_H_SKEW", "BE_H_VAR", "BE_PR_CAN", "BE_PR_REG", "BE_PR_UND", "BE_RD_CAN",
"BE_RD_GND", "BE_RD_REG", "BE_RD_UND", "chm_height_max", "chm_height_mean", "chm_height_min", "chm_height_sd",
"dtm_aspect_mean", "dtm_aspect_reg", "dtm_aspect_unweighted_mean", "dtm_slope_max", "dtm_slope_mean",
"dtm_slope_min", "dtm_slope_reg", "dtm_slope_sd", "pulse_returns_max", "pulse_returns_mean", "pulse_returns_min",
"pulse_returns_sd", "vegetation_coverage_01m", "vegetation_coverage_02m", "vegetation_coverage_05m",
"vegetation_coverage_10m", "max_hght", "sd", "mdn_rtrn", "max_rtrn", "sd_rtrn_1", "sd_nmbr_rtrn", "qntl_0",
"qntl_25", "qntl_50", "qntl_75", "qntl_100", "qntl_rng", "gap_frac")
var_imp <- as.data.frame(var_imp)
colnames(var_imp) <- "pred"
for (i in seq(mod)){
print(names(mod)[[i]])
print(varImp(mod[[i]]))
df <- as.data.frame(varImp(mod[[i]]))
colnames(df) <- c(names(mod)[[i]])
df$pred <- rownames(df)
var_imp <- merge(var_imp, df, all = T)
#a  <- merge(var_imp, df, by = "plotID")
}
View(var_imp)
View(var_imp)
a <- t(var_imp)
a <- as.data.framet(var_imp)
a <- as.data.frame(var_imp)
View(a)
a <- as.data.frame(t(var_imp))
View(a)
tif <- raster("C:/Users/Alice/Desktop/tmp/raster.tiff")
tif
# Author: Alice Ziegler
# Date: 2017-10-10 17:12:53
rm(list=ls())
########################################################################################
###Presettings
########################################################################################
#Packages:
library(caret)
library(raster)
#library(plsdepot)
#Sources:
inpath <- "F:/Projekte/Kili/data/"
outpath <- "F:/Projekte/Kili/out/"
########################################################################################
###Settings
########################################################################################
#load(paste0(inpath, "pls_model_list_all.RData"))
load(paste0(inpath, "pls_model_list_all_forest_only.RData"))
#load(paste0(inpath, "pls_model_list_all_no_rfe.RData"))
load(paste0(inpath, "dat_ldr_mrg.RData"))
predictors(mod)
mod$SRallplants$fit$modelInfo$predictors()
mod$SRallplants
names(mod$SRallplants$trainingData)[1:ncol(mod$SRallplants$trainingData)-1]
#mod$SRallplants$trainingData
mod$SRallplants$trainingData
mod$SRallplants
mod$SRallplants$fit$trainingData
names(mod$SRallplants$fit$trainingData)
str(mod)
str(mod$SRallplants)
unique(mod$SRallplants$variables$var)
load("F:/Projekte/Kili/data/mar18_50m_resid_nrmlz/dat_ldr_mrg.RData")
load("C:/Users/Alice/AppData/Local/Temp/df_meta.RData")
View(df_meta)
setwd(dirname(rstudioapi::getSourceEditorContext()[[2]]))
setwd(dirname(rstudioapi::getSourceEditorContext()[[2]]))
rm(list=ls())
setwd(dirname(rstudioapi::getSourceEditorContext()[[2]]))
df_meta <- get(load("df_meta.RData"))
outs <- function(ind_num, df_meta){
lapply(seq(ind_num), function(k){
out_sel <- df_meta[which(df_meta$selID == k),]
miss <- cats[!(cats %in% out_sel$cat)]
df_miss <- df_meta[df_meta$cat %in% as.vector(miss),]
set.seed(k)
out_miss <- ddply(df_miss, .(cat), function(x){
x[sample(nrow(x), 1), ]
})
out <- rbind(out_sel, out_miss)
})}
ind_num <- 5
a <- outs(ind_num= ind_num, df_meta = df_meta)
View(df_meta)
View(df_meta)
outs <- function(ind_num, df_meta){
lapply(seq(ind_num), function(k){
out_sel <- df_meta[which(df_meta$selID == k),]
miss <- cats[!(unique(df_meta$cat) %in% out_sel$cat)]
df_miss <- df_meta[df_meta$cat %in% as.vector(miss),]
set.seed(k)
out_miss <- ddply(df_miss, .(cat), function(x){
x[sample(nrow(x), 1), ]
})
out <- rbind(out_sel, out_miss)
})}
a <- outs(ind_num= ind_num, df_meta = df_meta)
outs <- function(ind_num, df_meta){
lapply(seq(ind_num), function(k){
out_sel <- df_meta[which(df_meta$selID == k),]
miss <- unique(df_meta$cat)[!(unique(df_meta$cat) %in% out_sel$cat)]
df_miss <- df_meta[df_meta$cat %in% as.vector(miss),]
set.seed(k)
out_miss <- ddply(df_miss, .(cat), function(x){
x[sample(nrow(x), 1), ]
})
out <- rbind(out_sel, out_miss)
})}
a <- outs(ind_num= ind_num, df_meta = df_meta)
library(plyr)
a <- outs(ind_num= ind_num, df_meta = df_meta)
a
View(df_meta)
seq(ind_num)
seq(min_idx, max_idx, 1)
min_idx <- 0
max_idx <- 10
seq(min_idx, max_idx, 1)
outs <- function(min_idx, max_idx, df_meta){
lapply(seq(min_idx, max_idx, 1), function(k){
out_sel <- df_meta[which(df_meta$selID == k),]
miss <- unique(df_meta$cat)[!(unique(df_meta$cat) %in% out_sel$cat)]
df_miss <- df_meta[df_meta$cat %in% as.vector(miss),]
set.seed(k)
out_miss <- ddply(df_miss, .(cat), function(x){
x[sample(nrow(x), 1), ]
})
out <- rbind(out_sel, out_miss)
})}
a <- outs(min_idx = min_idx, max_idx = max_idx, df_meta = df_meta)
a
rm(list=ls())
library(plyr)
setwd(dirname(rstudioapi::getSourceEditorContext()[[2]]))
df_meta <- get(load("df_meta.RData"))
ind_num <- 5
min_idx <- 0
max_idx <- 10
sel_by_idx <- function(min_idx, max_idx, df_meta){
lapply(seq(min_idx, max_idx, 1), function(k){
out_sel <- df_meta[which(df_meta$selID == k),]
miss <- unique(df_meta$cat)[!(unique(df_meta$cat) %in% out_sel$cat)]
df_miss <- df_meta[df_meta$cat %in% as.vector(miss),]
set.seed(k)
out_miss <- ddply(df_miss, .(cat), function(x){
x[sample(nrow(x), 1), ]
})
out <- rbind(out_sel, out_miss)
})}
outs <- sel_by_idx(min_idx = min_idx, max_idx = max_idx, df_meta = df_meta)
outs
